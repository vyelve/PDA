@model TerminalViewModel
@{ ViewBag.Title = "Terminal"; }

<section class="content">
    <div class="container-fluid">
        <div class="card card-default">
            <div class="card-header">
                <h3 class="card-title">Create Terminal</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>

            <div class="card-body">
                <form method="post" class="mt-3" id="terminalform">
                    <div class="form-group row">
                        <label asp-for="TerminalName" class="col-sm-2 col-form-label">Terminal Name</label>
                        <div class="col-sm-4">
                            <input id="txtTerminalName" asp-for="TerminalName" class="form-control" placeholder="Terminal Name" autocomplete="off">
                            <span asp-validation-for="TerminalName" class="text-danger field-validation-valid"></span>
                        </div>

                        <label asp-for="PortID" class="col-sm-2 col-form-label">Port</label>
                        <div class="col-sm-4">
                            <select asp-for="PortID" class="form-control" id="ddlPort"
                                    asp-items="@(new SelectList(ViewBag.PortDropdown,"Value", "Text"))">
                                <option value="">Select Port</option>
                            </select>
                            <span asp-validation-for="PortID" class="text-danger field-validation-valid"></span>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label asp-for="IsActive" class="col-sm-2 col-form-label">Is Active</label>
                        <div class="col-sm-10">
                            <div>
                                <input type="checkbox" asp-for="IsActive" class="form-check-input" id="chkIsActive"
                                       data-toggle="toggle" data-on="Active" data-off="In Active" data-onstyle="success" data-offstyle="danger">
                                <span asp-validation-for="IsActive" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group row">
                        <input hidden asp-for="TerminalID" id="hdnTerminalID" />
                    </div>
                    
                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-12 col-sm-12 col-xs-12 col-md-offset-3">
                                <center>
                                    <input value="Submit" type="submit" id="btnSubmit" class="btn btn-primary" />
                                    <button type="button" id="btnCancel" class="btn btn-primary">Cancel</button>
                                </center>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="card card-default">
            <div class="card-header">
                <h3 class="card-title">Terminal List</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="tblTerminal" class="table table-striped responsive-utilities jambo_table"></table>
                </div>
            </div>
        </div>
    </div>
</section>

<script type="text/javascript">

    $(function () {
        $('#chkIsActive').bootstrapToggle('on');
    });

    var jsonData =@Html.Raw(Json.Serialize(Model.TblTerminal));
    console.log(jsonData);


    window.operateEvents = {
        'click .editTerminal': function (e, value, row, index) {
            var _terminalModel = new TerminalModel();
            _terminalModel.resetTerminalModel();
            Window.existingModel = row;
            _terminalModel.setTerminalModel(row);
        }
    }
</script>
<script src="@Url.Content("~/ApplicationScripts/terminal.js")"></script>
